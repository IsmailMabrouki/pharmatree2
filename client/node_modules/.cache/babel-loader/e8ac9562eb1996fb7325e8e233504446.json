{"ast":null,"code":"import { FETCH_MEDICINE_PRODUCTS_REQUEST, FETCH_MEDICINE_PRODUCTS_SUCCESS, FETCH_MEDICINE_PRODUCTS_FAILURE } from '../types';\nimport axios from 'axios';\nexport const fetchMedicineProductsRequest = () => ({\n  type: FETCH_MEDICINE_PRODUCTS_REQUEST\n});\nexport const fetchMedicineProductsSuccess = data => ({\n  type: FETCH_MEDICINE_PRODUCTS_SUCCESS,\n  payload: data // consistent with the naming convention used in the failure action\n\n});\nexport const fetchMedicineProductsFailure = error => ({\n  type: FETCH_MEDICINE_PRODUCTS_FAILURE,\n  payload: error\n});\nexport const fetchMedicineProducts = () => async dispatch => {\n  dispatch(fetchMedicineProductsRequest());\n\n  try {\n    // Perform an API request here using Axios\n    const response = await axios.get('/api/products/');\n\n    if (response.status !== 200) {\n      throw new Error('Error!');\n    }\n\n    console.log(response.data);\n    dispatch(fetchMedicineProductsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchMedicineProductsFailure(error.message));\n  }\n};","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Bureau/projet GL1/pharmatree2/client/src/redux/actions/productAction.js"],"names":["FETCH_MEDICINE_PRODUCTS_REQUEST","FETCH_MEDICINE_PRODUCTS_SUCCESS","FETCH_MEDICINE_PRODUCTS_FAILURE","axios","fetchMedicineProductsRequest","type","fetchMedicineProductsSuccess","data","payload","fetchMedicineProductsFailure","error","fetchMedicineProducts","dispatch","response","get","status","Error","console","log","message"],"mappings":"AAAA,SACEA,+BADF,EAEEC,+BAFF,EAGEC,+BAHF,QAIO,UAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,4BAA4B,GAAG,OAAO;AACjDC,EAAAA,IAAI,EAAEL;AAD2C,CAAP,CAArC;AAIP,OAAO,MAAMM,4BAA4B,GAAIC,IAAD,KAAW;AACrDF,EAAAA,IAAI,EAAEJ,+BAD+C;AAErDO,EAAAA,OAAO,EAAED,IAF4C,CAEtC;;AAFsC,CAAX,CAArC;AAKP,OAAO,MAAME,4BAA4B,GAAIC,KAAD,KAAY;AACtDL,EAAAA,IAAI,EAAEH,+BADgD;AAEtDM,EAAAA,OAAO,EAAEE;AAF6C,CAAZ,CAArC;AAKP,OAAO,MAAMC,qBAAqB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAACR,4BAA4B,EAA7B,CAAR;;AAEA,MAAI;AACF;AACA,UAAMS,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,gBAAV,CAAvB;;AAEA,QAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACN,IAArB;AACAK,IAAAA,QAAQ,CAACN,4BAA4B,CAACO,QAAQ,CAACN,IAAV,CAA7B,CAAR;AACD,GAVD,CAUE,OAAOG,KAAP,EAAc;AACdE,IAAAA,QAAQ,CAACH,4BAA4B,CAACC,KAAK,CAACS,OAAP,CAA7B,CAAR;AACD;AACF,CAhBM","sourcesContent":["import {\r\n  FETCH_MEDICINE_PRODUCTS_REQUEST,\r\n  FETCH_MEDICINE_PRODUCTS_SUCCESS,\r\n  FETCH_MEDICINE_PRODUCTS_FAILURE,\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchMedicineProductsRequest = () => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_REQUEST,\r\n});\r\n\r\nexport const fetchMedicineProductsSuccess = (data) => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_SUCCESS,\r\n  payload: data, // consistent with the naming convention used in the failure action\r\n});\r\n\r\nexport const fetchMedicineProductsFailure = (error) => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchMedicineProducts = () => async (dispatch) => {\r\n  dispatch(fetchMedicineProductsRequest());\r\n\r\n  try {\r\n    // Perform an API request here using Axios\r\n    const response = await axios.get('/api/products/');\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error('Error!');\r\n    }\r\n\r\n    console.log(response.data);\r\n    dispatch(fetchMedicineProductsSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(fetchMedicineProductsFailure(error.message));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}