{"ast":null,"code":"// productReducer.js\nimport * as types from '../types';\nconst initialState = {\n  medicineProducts: [],\n  isLoading: false,\n  error: null\n};\n\nconst medicineProductsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.FETCH_MEDICINE_PRODUCTS_REQUEST:\n      console.log(\"Reducer: FETCH_MEDICINE_PRODUCTS_REQUEST\");\n      return { ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case types.FETCH_MEDICINE_PRODUCTS_SUCCESS:\n      console.log(\"Reducer: FETCH_MEDICINE_PRODUCTS_SUCCESS\", action.payload);\n      return { ...state,\n        isLoading: false,\n        medicineProducts: action.payload\n      };\n\n    case types.FETCH_MEDICINE_PRODUCTS_FAILURE:\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default medicineProductsReducer;","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Bureau/projet GL1/pharmatree2/client/src/redux/reducers/productReducer.js"],"names":["types","initialState","medicineProducts","isLoading","error","medicineProductsReducer","state","action","type","FETCH_MEDICINE_PRODUCTS_REQUEST","console","log","FETCH_MEDICINE_PRODUCTS_SUCCESS","payload","FETCH_MEDICINE_PRODUCTS_FAILURE"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,EADC;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,uBAAuB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,+BAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAAP;;AAEF,SAAKJ,KAAK,CAACY,+BAAX;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDJ,MAAM,CAACM,OAA/D;AACA,aAAO,EAAE,GAAGP,KAAL;AAAYH,QAAAA,SAAS,EAAE,KAAvB;AAA8BD,QAAAA,gBAAgB,EAAEK,MAAM,CAACM;AAAvD,OAAP;;AAEF,SAAKb,KAAK,CAACc,+BAAX;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYH,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,KAAK,EAAEG,MAAM,CAACM;AAA5C,OAAP;;AAEF;AACE,aAAOP,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,uBAAf","sourcesContent":["// productReducer.js\r\nimport * as types from '../types';\r\n\r\nconst initialState = {\r\n  medicineProducts: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst medicineProductsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_MEDICINE_PRODUCTS_REQUEST:\r\n      console.log(\"Reducer: FETCH_MEDICINE_PRODUCTS_REQUEST\");\r\n      return { ...state, isLoading: true, error: null };\r\n\r\n    case types.FETCH_MEDICINE_PRODUCTS_SUCCESS:\r\n      console.log(\"Reducer: FETCH_MEDICINE_PRODUCTS_SUCCESS\", action.payload);\r\n      return { ...state, isLoading: false, medicineProducts: action.payload };\r\n\r\n    case types.FETCH_MEDICINE_PRODUCTS_FAILURE:\r\n      return { ...state, isLoading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default medicineProductsReducer;\r\n"]},"metadata":{},"sourceType":"module"}