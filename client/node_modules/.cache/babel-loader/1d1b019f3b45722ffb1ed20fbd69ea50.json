{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismai\\\\OneDrive\\\\Bureau\\\\projet GL1\\\\pharmatree2\\\\client\\\\src\\\\pages\\\\Products.jsx\",\n    _s = $RefreshSig$();\n\n// ProductList.jsx\nimport React, { useState, useEffect } from 'react';\nimport Product from '../components/Product';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductList = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Fetch products from the backend when the component mounts\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3600/api/products'); // Replace with your backend API endpoint\n\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts();\n  }, []); // The empty dependency array ensures this effect runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), products.map(product => /*#__PURE__*/_jsxDEV(Product, { ...product\n    }, product._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Bureau/projet GL1/pharmatree2/client/src/pages/Products.jsx"],"names":["React","useState","useEffect","Product","axios","ProductList","products","setProducts","fetchProducts","response","get","data","error","console","map","product","_id"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMM,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,oCAAV,CAAvB,CADE,CACsE;;AACxEH,QAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD;AACF,KAPD;;AASAJ,IAAAA,aAAa;AACd,GAZQ,EAYN,EAZM,CAAT,CAHwB,CAehB;;AAER,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,QAAQ,CAACQ,GAAT,CAAcC,OAAD,iBACZ,QAAC,OAAD,OAA+BA;AAA/B,OAAcA,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzBD;;GAAMX,W;;KAAAA,W;AA2BN,eAAeA,WAAf","sourcesContent":["// ProductList.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Product from '../components/Product';\r\nimport axios from 'axios';\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch products from the backend when the component mounts\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3600/api/products'); // Replace with your backend API endpoint\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []); // The empty dependency array ensures this effect runs only once when the component mounts\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      <h1>Product List</h1>\r\n      {products.map((product) => (\r\n        <Product key={product._id} {...product} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}