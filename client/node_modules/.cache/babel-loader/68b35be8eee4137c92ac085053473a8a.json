{"ast":null,"code":"import { FETCH_MEDICINE_PRODUCTS_REQUEST, FETCH_MEDICINE_PRODUCTS_SUCCESS, FETCH_MEDICINE_PRODUCTS_FAILURE } from '../types';\nimport axios from 'axios';\nexport const fetchMedicineProductsRequest = () => ({\n  type: FETCH_MEDICINE_PRODUCTS_REQUEST\n});\nconsole.log('started fetching');\nexport const fetchMedicineProductsSuccess = data => ({\n  type: FETCH_MEDICINE_PRODUCTS_SUCCESS,\n  payload: data\n});\nexport const fetchMedicineProductsFailure = error => ({\n  type: FETCH_MEDICINE_PRODUCTS_FAILURE,\n  error\n});\nexport const fetchMedicineProducts = () => async dispatch => {\n  dispatch(fetchMedicineProductsRequest());\n\n  try {\n    // Perform an API request here using Axios\n    const response = await axios.get('/api/medicine-products');\n    if (!response || !response.status === 200) throw new Error('Error!');\n    return dispatch(fetchMedicineProductsSuccess(response.data));\n  } catch (error) {\n    return dispatch(fetchMedicineProductsFailure(error.message));\n  }\n};","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Bureau/projet GL1/pharmatree2/client/src/redux/actions/productAction.js"],"names":["FETCH_MEDICINE_PRODUCTS_REQUEST","FETCH_MEDICINE_PRODUCTS_SUCCESS","FETCH_MEDICINE_PRODUCTS_FAILURE","axios","fetchMedicineProductsRequest","type","console","log","fetchMedicineProductsSuccess","data","payload","fetchMedicineProductsFailure","error","fetchMedicineProducts","dispatch","response","get","status","Error","message"],"mappings":"AAAA,SACEA,+BADF,EAEEC,+BAFF,EAGEC,+BAHF,QAIO,UAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,4BAA4B,GAAG,OAAO;AACjDC,EAAAA,IAAI,EAAEL;AAD2C,CAAP,CAArC;AAGPM,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,OAAO,MAAMC,4BAA4B,GAAIC,IAAD,KAAW;AACrDJ,EAAAA,IAAI,EAAEJ,+BAD+C;AAErDS,EAAAA,OAAO,EAAED;AAF4C,CAAX,CAArC;AAKP,OAAO,MAAME,4BAA4B,GAAIC,KAAD,KAAY;AACtDP,EAAAA,IAAI,EAAEH,+BADgD;AAEtDU,EAAAA;AAFsD,CAAZ,CAArC;AAKP,OAAO,MAAMC,qBAAqB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAACV,4BAA4B,EAA7B,CAAR;;AACA,MAAI;AACF;AACA,UAAMW,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,wBAAV,CAAvB;AACA,QAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACE,MAAV,KAAqB,GAAtC,EAA2C,MAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AAC3C,WAAOJ,QAAQ,CAACN,4BAA4B,CAACO,QAAQ,CAACN,IAAV,CAA7B,CAAf;AACC,GALH,CAKI,OAAOG,KAAP,EAAc;AACd,WAAOE,QAAQ,CAACH,4BAA4B,CAACC,KAAK,CAACO,OAAP,CAA7B,CAAf;AACC;AACA,CAVA","sourcesContent":["import {\r\n  FETCH_MEDICINE_PRODUCTS_REQUEST,\r\n  FETCH_MEDICINE_PRODUCTS_SUCCESS,\r\n  FETCH_MEDICINE_PRODUCTS_FAILURE,\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchMedicineProductsRequest = () => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_REQUEST,\r\n});\r\nconsole.log('started fetching');\r\nexport const fetchMedicineProductsSuccess = (data) => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const fetchMedicineProductsFailure = (error) => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_FAILURE,\r\n  error,\r\n});\r\n\r\nexport const fetchMedicineProducts = () => async (dispatch) => {\r\n  dispatch(fetchMedicineProductsRequest());\r\n  try {\r\n    // Perform an API request here using Axios\r\n    const response = await axios.get('/api/medicine-products');\r\n    if (!response || !response.status === 200) throw new Error('Error!');\r\n    return dispatch(fetchMedicineProductsSuccess(response.data));\r\n    } catch (error) {\r\n      return dispatch(fetchMedicineProductsFailure(error.message));\r\n      }\r\n      };\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}